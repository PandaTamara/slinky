{"version":3,"sources":["slinky.js"],"names":["Slinky","element","options","arguments","length","undefined","_classCallCheck","this","settings","_objectSpread","theme","resize","speed","title","backLabelMarkup","nextLabelMarkup","menu","jQuery","base","children","first","addClass","_transition","each","i","el","prev","replaceWith","replace","text","header","back","prepend","parent","label","append","_addListeners","_jumpToInitial","_this","on","e","_clicked","Date","now","link","currentTarget","hasClass","preventDefault","_move","_resize","hide","parentsUntil","find","removeClass","active","next","show","round","css","setTimeout","callback","height","outerHeight","content","depth","left","Math","parseInt","get","concat","target","count","animate","to","menus","parents","not","styles","_this2","remove","off","transition-duration","contents","unwrap","attr","split","forEach","style","indexOf","field","fn","slinky"],"mappings":"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","file":"slinky.min.js","sourcesContent":["/*\r\n * Fork Slinky\r\n * Rather sweetmenus\r\n * @author Ali Zahid <ali.zahid@live.com>\r\n * @author fork Panda Tamara <link@mimika-team.ru>\r\n * @license MIT\r\n */\r\n\r\nclass Slinky {\r\n  // default options\r\n    get options() {\r\n        return {\r\n            resize: true,\r\n            speed: 300,\r\n            theme: 'slinky-theme-default',\r\n            title: false,\r\n            backLabelMarkup: '<label><i class=\"back-icon\"></i></label>',\r\n            nextLabelMarkup: '<label><span>%title%</span><i class=\"next-icon\"></i></label>'\r\n        }\r\n  }\r\n\r\n  constructor(element, options = {}) {\r\n    // save settings\r\n    this.settings = {\r\n      ...this.options,\r\n      ...options\r\n    }\r\n\r\n    // let's go!\r\n    this._init(element)\r\n  }\r\n\r\n  // setup the DOM just for us\r\n  _init(element) {\r\n    // the two elements of water and moisture\r\n    this.menu = jQuery(element)\r\n    this.base = this.menu.children().first()\r\n\r\n    const { base, menu, settings } = this\r\n\r\n    // set theme\r\n    menu.addClass('slinky-menu').addClass(settings.theme)\r\n\r\n    // set transition speed\r\n    this._transition(settings.speed)\r\n\r\n\r\n\r\n      // add arrows to links with children\r\n      jQuery('a + ul', menu).each(function (i, el) {\r\n          jQuery(el)\r\n              .prev()\r\n              .replaceWith(settings.nextLabelMarkup.replace('%title%', jQuery(el).prev().text()))\r\n\r\n      });\r\n\r\n\r\n    // create header item\r\n    const header = jQuery('<li>').addClass('header')\r\n\r\n    // prepend it to the list\r\n    jQuery('li > ul', menu).prepend(header)\r\n\r\n    // create back buttons\r\n      const back =\r\n          jQuery(settings.backLabelMarkup)\r\n              .addClass('back')\r\n\r\n    // prepend them to the headers\r\n    jQuery('.header', menu).prepend(back)\r\n\r\n    // do we need to add titles?\r\n    if (settings.title) {\r\n      // loop through each child list\r\n      jQuery('li > ul', menu).each((index, element) => {\r\n        // get the label from the parent link\r\n        const label = jQuery(element)\r\n          .parent()\r\n          .find('a')\r\n          .first()\r\n          .text()\r\n\r\n        // if it's not empty, create the title\r\n        if (label) {\r\n          const title = jQuery('<header>')\r\n            .addClass('title')\r\n            .text(label)\r\n\r\n          // append it to the immediate header\r\n          jQuery('> .header', element).append(title)\r\n        }\r\n      })\r\n    }\r\n\r\n    // add click listeners\r\n    this._addListeners()\r\n\r\n    // jump to initial active\r\n    this._jumpToInitial()\r\n  }\r\n\r\n  // click listeners\r\n  _addListeners() {\r\n    const { menu, settings } = this\r\n\r\n    jQuery('label', menu).on('click', e => {\r\n      // prevent broken/half transitions\r\n      if (this._clicked + settings.speed > Date.now()) {\r\n        return false\r\n      }\r\n\r\n      // cache click time to check on next click\r\n      this._clicked = Date.now()\r\n\r\n      // get the link\r\n      const link = jQuery(e.currentTarget)\r\n\r\n      // prevent default if it's a hash\r\n      // or a Slinky button\r\n      if (\r\n        //link.attr('href').indexOf('#') === 0 ||\r\n        link.hasClass('next') ||\r\n        link.hasClass('back')\r\n      ) {\r\n        e.preventDefault()\r\n      }\r\n\r\n      // time to move\r\n      if (link.hasClass('back')) {\r\n          // and two steps back\r\n          // just one step back, actually\r\n\r\n          // make the move\r\n          this._move(-1, () => {\r\n              // remove the current active\r\n              menu.find('.active').removeClass('active')\r\n\r\n              // set the new active\r\n              link\r\n                  .parent()\r\n                  .parent()\r\n                  .hide()\r\n                  .parentsUntil(menu, 'ul')\r\n                  .first()\r\n                  .addClass('active')\r\n          })\r\n\r\n          // resize the menu if need be\r\n          if (settings.resize) {\r\n              this._resize(\r\n                  link\r\n                      .parent()\r\n                      .parent()\r\n                      .parentsUntil(menu, 'ul')\r\n              )\r\n          }\r\n\r\n      } else {\r\n        // one step forward\r\n\r\n        // remove the current active\r\n        menu.find('.active').removeClass('active')\r\n\r\n        // set the new active\r\n        link\r\n          .next()\r\n          .show()\r\n          .addClass('active')\r\n\r\n        // make the chess move\r\n        this._move(1)\r\n\r\n        // resize the menu if need be\r\n        if (settings.resize) {\r\n          this._resize(link.next())\r\n        }\r\n      }\r\n\r\n\r\n\r\n    })\r\n  }\r\n\r\n  // jump to initial active on init\r\n  _jumpToInitial() {\r\n    const { menu, settings } = this\r\n\r\n    // get initial active\r\n    const active = menu.find('.active')\r\n\r\n    if (active.length > 0) {\r\n      // remove initial active\r\n      active.removeClass('active')\r\n\r\n      // jump without animation\r\n      this.jump(active, false)\r\n    }\r\n\r\n    // set initial height on the menu\r\n    // to fix the first transition resize bug\r\n    setTimeout(() => menu.height(menu.outerHeight()), settings.speed)\r\n  }\r\n\r\n  // slide the menu\r\n  _move(depth = 0, callback = () => {}) {\r\n    // don't bother packing if we're not going anywhere\r\n    if (depth === 0) {\r\n      return\r\n    }\r\n\r\n    const { settings, base } = this\r\n\r\n    // get current position from the left\r\n    const left = Math.round(parseInt(base.get(0).style.left)) || 0\r\n\r\n    // set the new position from the left\r\n    base.css('left', `${left - depth * 100}%`)\r\n\r\n    // callback after the animation\r\n    if (typeof callback === 'function') {\r\n      setTimeout(callback, settings.speed)\r\n    }\r\n  }\r\n\r\n  // resize the menu\r\n  // to match content height\r\n  _resize(content) {\r\n    const { menu } = this\r\n\r\n    menu.height(content.outerHeight())\r\n  }\r\n\r\n  // set the transition speed\r\n  _transition(speed = 300) {\r\n    const { menu, base } = this\r\n\r\n    menu.css('transition-duration', `${speed}ms`)\r\n    base.css('transition-duration', `${speed}ms`)\r\n  }\r\n\r\n  // jump to an element\r\n  jump(target, animate = true) {\r\n    if (!target) {\r\n      return\r\n    }\r\n\r\n    const { menu, settings } = this\r\n\r\n    const to = jQuery(target)\r\n\r\n    // get all current active\r\n    const active = menu.find('.active')\r\n\r\n    // how many moves must we jump?\r\n    let count = 0\r\n\r\n    // this many\r\n    // until we reach the parent list\r\n    if (active.length > 0) {\r\n      count = active.parentsUntil(menu, 'ul').length\r\n    }\r\n\r\n    // remove current active\r\n    // hide all lists\r\n    menu\r\n      .find('ul')\r\n      .removeClass('active')\r\n      .hide()\r\n\r\n    // get parent list\r\n    const menus = to.parentsUntil(menu, 'ul')\r\n\r\n    // show parent list\r\n    menus.show()\r\n\r\n    //\r\n    to.show().addClass('active')\r\n\r\n    // set transition speed to 0 if no animation\r\n    if (!animate) {\r\n      this._transition(0)\r\n    }\r\n\r\n    // make the checkers move\r\n    this._move(menus.length - count)\r\n\r\n    // resize menu if need be\r\n    if (settings.resize) {\r\n      this._resize(to)\r\n    }\r\n\r\n    // set transition speed to default after transition\r\n    if (!animate) {\r\n      this._transition(settings.speed)\r\n    }\r\n  }\r\n\r\n  // go big or go home\r\n  // just go home\r\n  home(animate = true) {\r\n    const { base, menu, settings } = this\r\n\r\n    // set transition speed to 0 if no animation\r\n    if (!animate) {\r\n      this._transition(0)\r\n    }\r\n\r\n    // get current active\r\n    const active = menu.find('.active')\r\n\r\n    // get all parent lists\r\n    const parents = active.parentsUntil(menu, 'ul')\r\n\r\n    // make the move\r\n    this._move(-parents.length, () => {\r\n      // remove the current active\r\n      active.removeClass('active').hide()\r\n\r\n      // hide all parents except base\r\n      parents.not(base).hide()\r\n    })\r\n\r\n    // resize if need be\r\n    if (settings.resize) {\r\n      this._resize(base)\r\n    }\r\n\r\n    // set transition speed back to default\r\n    if (animate === false) {\r\n      this._transition(settings.speed)\r\n    }\r\n  }\r\n\r\n  // crush, kill, destroy\r\n  destroy() {\r\n    const { base, menu } = this\r\n\r\n    // remove all headers\r\n    jQuery('.header', menu).remove()\r\n\r\n    // remove Slinky links\r\n    // and click listeners\r\n    jQuery('a', menu)\r\n      .removeClass('next')\r\n      .off('click')\r\n\r\n    // remove inline styles\r\n    menu.css({\r\n      height: '',\r\n      'transition-duration': ''\r\n    })\r\n\r\n    base.css({\r\n      left: '',\r\n      'transition-duration': ''\r\n    })\r\n\r\n    // remove Slinky HTML\r\n    jQuery('li > a > span', menu)\r\n      .contents()\r\n      .unwrap()\r\n\r\n    // remove any current active\r\n    menu.find('.active').removeClass('active')\r\n\r\n    // remove any Slinky style classes\r\n    const styles = menu.attr('class').split(' ')\r\n\r\n    styles.forEach(style => {\r\n      if (style.indexOf('slinky') === 0) {\r\n        menu.removeClass(style)\r\n      }\r\n    })\r\n\r\n    // reset fields\r\n    const fields = ['settings', 'menu', 'base']\r\n\r\n    fields.forEach(field => delete this[field])\r\n  }\r\n}\r\n\r\n// jQuery plugin\r\n;($ => {\r\n  $.fn.slinky = function(options) {\r\n    const menu = new Slinky(this, options)\r\n\r\n    return menu\r\n  }\r\n})(jQuery)\r\n"]}