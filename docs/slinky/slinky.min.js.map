{"version":3,"sources":["slinky.js"],"names":["MAIN_CLASS","HEADER_CLASS","TITLE_CLASS","NEXT_CLASS","BACK_CLASS","Slinky","resize","element","options","arguments","length","undefined","_classCallCheck","this","theme","settings","backLabelMarkup","backClass","nextLabelMarkup","mainClass","headerClass","titleClass","nextClass","menu","jQuery","base","children","first","addClass","_init","speed","header","title","each","index","label","find","_transition","attr","prepend","text","back","append","el","replaceWith","prev","_addListeners","replace","_clicked","on","e","now","Date","_this","_move","currentTarget","link","hasClass","removeClass","parent","show","parentsUntil","_resize","active","next","callback","setTimeout","height","outerHeight","depth","left","Math","round","parseInt","get","style","css","concat","animate","content","count","target","to","menus","hide","parents","not","_this2","fields","forEach","field","remove","off","transition-duration","contents","unwrap","split","indexOf","fn","slinky"],"mappings":"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","file":"slinky.min.js","sourcesContent":["/*\r\n * Fork Slinky\r\n * Rather sweetmenus\r\n * @author Ali Zahid <ali.zahid@live.com>\r\n * @author fork Panda Tamara <link@mimika-team.ru>\r\n * @license MIT\r\n */\r\n\r\n/**\r\n * Static constants\r\n */\r\nconst\r\n    MAIN_CLASS = 'sm-wrap',\r\n    HEADER_CLASS = 'sm-header',\r\n    TITLE_CLASS = 'sm-title',\r\n    NEXT_CLASS = 'sm-next',\r\n    BACK_CLASS = 'sm-back';\r\n\r\nclass Slinky {\r\n\r\n    // default options\r\n    get options() {\r\n        return {\r\n            resize: true,\r\n            speed: 300,\r\n            theme: false,\r\n            title: true,\r\n            backLabelMarkup: '<label><i class=\"sm-back-icon\"></i></label>',\r\n            nextLabelMarkup: '<label>%title%<i class=\"sm-next-icon\"></i></label>',\r\n            mainClass: false,\r\n            headerClass: false,\r\n            backClass: false,\r\n            titleClass: false,\r\n            nextClass: false\r\n        }\r\n    }\r\n\r\n    constructor(element, options = {}) {\r\n        // save settings\r\n        this.settings = {\r\n            ...this.options,\r\n            ...options\r\n        }\r\n\r\n        // let's go!\r\n        this._init(element)\r\n    }\r\n\r\n    // setup the DOM just for us\r\n    _init(element) {\r\n        // the two elements of water and moisture\r\n        this.menu = jQuery(element)\r\n        this.base = this.menu.children().first()\r\n\r\n        const {base, menu, settings} = this\r\n\r\n        // set theme\r\n        menu.addClass(MAIN_CLASS).addClass(settings.mainClass).addClass(settings.theme)\r\n\r\n        // set transition speed\r\n        this._transition(settings.speed)\r\n\r\n        // create header item\r\n        const header = jQuery('<li>').addClass(HEADER_CLASS).addClass(settings.headerClass)\r\n\r\n        // prepend it to the list\r\n        jQuery('li > ul', menu).prepend(header)\r\n\r\n        // do we need to add titles?\r\n        if (settings.title) {\r\n            // loop through each child list\r\n            jQuery('li > ul', menu).each((index, element) => {\r\n                // get the label from the parent link\r\n                const label = jQuery(element)\r\n                    .parent()\r\n                    .find('a')\r\n                    .first()\r\n\r\n                // if it's not empty, create the title\r\n                if (label) {\r\n                    const title = jQuery(label.attr('href') === '#' ? jQuery('<label>') : jQuery('<a>').attr('href', label.attr('href')))\r\n                        .addClass(TITLE_CLASS)\r\n                        .addClass(settings.titleClass)\r\n                        .text(label.text())\r\n                    // append it to the immediate header\r\n                    jQuery('> .' + HEADER_CLASS, element).append(title)\r\n\r\n                }\r\n            })\r\n        }\r\n\r\n\r\n\r\n        // create back buttons\r\n        const back =\r\n            jQuery(settings.backLabelMarkup)\r\n                .addClass(BACK_CLASS)\r\n                .addClass(settings.backClass)\r\n\r\n        // prepend them to the headers\r\n        jQuery('.' + HEADER_CLASS, menu).append(back)\r\n\r\n        // add arrows to links with children\r\n        jQuery('a + ul', menu).each(function (i, el) {\r\n            jQuery(el)\r\n                .prev()\r\n                .replaceWith(jQuery(settings.nextLabelMarkup.replace('%title%', jQuery(el).prev().text()))\r\n                    .addClass(NEXT_CLASS)\r\n                    .addClass(settings.nextClass)\r\n                )\r\n\r\n        });\r\n\r\n        // add click listeners\r\n        this._addListeners()\r\n\r\n        // jump to initial active\r\n        this._jumpToInitial()\r\n    }\r\n\r\n    // click listeners\r\n    _addListeners() {\r\n        const {menu, settings} = this\r\n\r\n        jQuery('label', menu).on('click', e => {\r\n            // prevent broken/half transitions\r\n            if (this._clicked + settings.speed > Date.now()) {\r\n                return false\r\n            }\r\n\r\n            // cache click time to check on next click\r\n            this._clicked = Date.now()\r\n\r\n            // get the link\r\n            const link = jQuery(e.currentTarget)\r\n\r\n            // time to move\r\n            if (link.hasClass(BACK_CLASS)) {\r\n                // and two steps back\r\n                // just one step back, actually\r\n\r\n                // make the move\r\n                this._move(-1, () => {\r\n                    // remove the current active\r\n                    menu.find('.active').removeClass('active')\r\n\r\n                    // set the new active\r\n                    link\r\n                        .parent()\r\n                        .parent()\r\n                        .hide()\r\n                        .parentsUntil(menu, 'ul')\r\n                        .first()\r\n                        .addClass('active')\r\n                })\r\n\r\n                // resize the menu if need be\r\n                if (settings.resize) {\r\n                    this._resize(\r\n                        link\r\n                            .parent()\r\n                            .parent()\r\n                            .parentsUntil(menu, 'ul')\r\n                    )\r\n                }\r\n\r\n            } else if (link.hasClass(NEXT_CLASS)) {\r\n                // one step forward\r\n\r\n                // remove the current active\r\n                menu.find('.active').removeClass('active')\r\n\r\n                // set the new active\r\n                link\r\n                    .next()\r\n                    .show()\r\n                    .addClass('active')\r\n\r\n                // make the chess move\r\n                this._move(1)\r\n\r\n                // resize the menu if need be\r\n                if (settings.resize) {\r\n                    this._resize(link.next())\r\n                }\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    // jump to initial active on init\r\n    _jumpToInitial() {\r\n        const {menu, settings} = this\r\n\r\n        // get initial active\r\n        const active = menu.find('.active')\r\n\r\n        if (active.length > 0) {\r\n            // remove initial active\r\n            active.removeClass('active')\r\n\r\n            // jump without animation\r\n            this.jump(active, false)\r\n        }\r\n\r\n        // set initial height on the menu\r\n        // to fix the first transition resize bug\r\n        setTimeout(() => menu.height(menu.outerHeight()), settings.speed)\r\n    }\r\n\r\n    // slide the menu\r\n    _move(depth = 0, callback = () => {\r\n    }) {\r\n        // don't bother packing if we're not going anywhere\r\n        if (depth === 0) {\r\n            return\r\n        }\r\n\r\n        const {settings, base} = this\r\n\r\n        // get current position from the left\r\n        const left = Math.round(parseInt(base.get(0).style.left)) || 0\r\n\r\n        // set the new position from the left\r\n        base.css('left', `${left - depth * 100}%`)\r\n\r\n        // callback after the animation\r\n        if (typeof callback === 'function') {\r\n            setTimeout(callback, settings.speed)\r\n        }\r\n    }\r\n\r\n    // resize the menu\r\n    // to match content height\r\n    _resize(content) {\r\n        const {menu} = this\r\n\r\n        menu.height(content.outerHeight())\r\n    }\r\n\r\n    // set the transition speed\r\n    _transition(speed = 300) {\r\n        const {menu, base} = this\r\n\r\n        menu.css('transition-duration', `${speed}ms`)\r\n        base.css('transition-duration', `${speed}ms`)\r\n    }\r\n\r\n    // jump to an element\r\n    jump(target, animate = true) {\r\n        if (!target) {\r\n            return\r\n        }\r\n\r\n        const {menu, settings} = this\r\n\r\n        const to = jQuery(target)\r\n\r\n        // get all current active\r\n        const active = menu.find('.active')\r\n\r\n        // how many moves must we jump?\r\n        let count = 0\r\n\r\n        // this many\r\n        // until we reach the parent list\r\n        if (active.length > 0) {\r\n            count = active.parentsUntil(menu, 'ul').length\r\n        }\r\n\r\n        // remove current active\r\n        // hide all lists\r\n        menu\r\n            .find('ul')\r\n            .removeClass('active')\r\n            .hide()\r\n\r\n        // get parent list\r\n        const menus = to.parentsUntil(menu, 'ul')\r\n\r\n        // show parent list\r\n        menus.show()\r\n\r\n        //\r\n        to.show().addClass('active')\r\n\r\n        // set transition speed to 0 if no animation\r\n        if (!animate) {\r\n            this._transition(0)\r\n        }\r\n\r\n        // make the checkers move\r\n        this._move(menus.length - count)\r\n\r\n        // resize menu if need be\r\n        if (settings.resize) {\r\n            this._resize(to)\r\n        }\r\n\r\n        // set transition speed to default after transition\r\n        if (!animate) {\r\n            this._transition(settings.speed)\r\n        }\r\n    }\r\n\r\n    // go big or go home\r\n    // just go home\r\n    home(animate = true) {\r\n        const {base, menu, settings} = this\r\n\r\n        // set transition speed to 0 if no animation\r\n        if (!animate) {\r\n            this._transition(0)\r\n        }\r\n\r\n        // get current active\r\n        const active = menu.find('.active')\r\n\r\n        // get all parent lists\r\n        const parents = active.parentsUntil(menu, 'ul')\r\n\r\n        // make the move\r\n        this._move(-parents.length, () => {\r\n            // remove the current active\r\n            active.removeClass('active').hide()\r\n\r\n            // hide all parents except base\r\n            parents.not(base).hide()\r\n        })\r\n\r\n        // resize if need be\r\n        if (settings.resize) {\r\n            this._resize(base)\r\n        }\r\n\r\n        // set transition speed back to default\r\n        if (animate === false) {\r\n            this._transition(settings.speed)\r\n        }\r\n    }\r\n\r\n    // crush, kill, destroy\r\n    destroy() {\r\n        const {base, menu, settings} = this\r\n\r\n        // remove all headers\r\n        jQuery('.' + HEADER_CLASS, menu).remove()\r\n\r\n        // remove Slinky links\r\n        // and click listeners\r\n        jQuery('a', menu)\r\n            .removeClass('next')\r\n            .off('click')\r\n\r\n        // remove inline styles\r\n        menu.css({\r\n            height: '',\r\n            'transition-duration': ''\r\n        })\r\n\r\n        base.css({\r\n            left: '',\r\n            'transition-duration': ''\r\n        })\r\n\r\n        // remove Slinky HTML\r\n        jQuery('li > a > span', menu)\r\n            .contents()\r\n            .unwrap()\r\n\r\n        // remove any current active\r\n        menu.find('.active').removeClass('active')\r\n\r\n        // remove any Slinky style classes\r\n        const styles = menu.attr('class').split(' ')\r\n\r\n        styles.forEach(style => {\r\n            if (style.indexOf('slinky') === 0) {\r\n                menu.removeClass(style)\r\n            }\r\n        })\r\n\r\n        // reset fields\r\n        const fields = ['settings', 'menu', 'base']\r\n\r\n        fields.forEach(field => delete this[field])\r\n    }\r\n}\r\n\r\n// jQuery plugin\r\n;($ => {\r\n    $.fn.slinky = function (options) {\r\n        const menu = new Slinky(this, options)\r\n\r\n        return menu\r\n    }\r\n})(jQuery)\r\n"]}