{"version":3,"sources":["slinky.js"],"names":["Slinky","element","options","arguments","length","undefined","_classCallCheck","this","settings","_objectSpread","theme","resize","speed","title","backBtnMarkup","nextBtnMarkup","menu","jQuery","base","children","first","addClass","_transition","each","i","el","prev","replaceWith","replace","text","prepend","header","back","index","label","find","append","_addListeners","_jumpToInitial","_this","on","e","_clicked","Date","now","link","currentTarget","attr","indexOf","preventDefault","hasClass","removeClass","next","show","_move","parent","_resize","hide","active","jump","parentsUntil","callback","height","left","outerHeight","depth","content","Math","round","parseInt","get","style","css","concat","setTimeout","target","animate","to","menus","count","parents","not","_this2","styles","remove","off","fields","transition-duration","fn","slinky","contents","unwrap","split","forEach","field"],"mappings":"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","file":"slinky.min.js","sourcesContent":["/*\r\n * Fork Slinky\r\n * Rather sweetmenus\r\n * @author Ali Zahid <ali.zahid@live.com>\r\n * @author fork Panda Tamara <link@mimika-team.ru>\r\n * @license MIT\r\n */\r\n\r\nclass Slinky {\r\n  // default options\r\n    get options() {\r\n        return {\r\n            resize: true,\r\n            speed: 300,\r\n            theme: 'slinky-theme-default',\r\n            title: false,\r\n            backBtnMarkup: '<a href=\"#\" class=\"back\"><i class=\"back-icon\"></i></a>',\r\n            nextBtnMarkup: '<a href=\"#\" class=\"next\"><span>%title%</span><i class=\"next-icon\"></i></a>'\r\n        }\r\n  }\r\n\r\n  constructor(element, options = {}) {\r\n    // save settings\r\n    this.settings = {\r\n      ...this.options,\r\n      ...options\r\n    }\r\n\r\n    // let's go!\r\n    this._init(element)\r\n  }\r\n\r\n  // setup the DOM just for us\r\n  _init(element) {\r\n    // the two elements of water and moisture\r\n    this.menu = jQuery(element)\r\n    this.base = this.menu.children().first()\r\n\r\n    const { base, menu, settings } = this\r\n\r\n    // set theme\r\n    menu.addClass('slinky-menu').addClass(settings.theme)\r\n\r\n    // set transition speed\r\n    this._transition(settings.speed)\r\n\r\n\r\n\r\n      // add arrows to links with children\r\n      jQuery('a + ul', menu).each(function (i, el) {\r\n          jQuery(el).prev().replaceWith(settings.nextBtnMarkup.replace('%title%', jQuery(el).prev().text()))\r\n      });\r\n\r\n\r\n    // create header item\r\n    const header = jQuery('<li>').addClass('header')\r\n\r\n    // prepend it to the list\r\n    jQuery('li > ul', menu).prepend(header)\r\n\r\n    // create back buttons\r\n      const back = jQuery(settings.backBtnMarkup);\r\n\r\n    // prepend them to the headers\r\n    jQuery('.header', menu).prepend(back)\r\n\r\n    // do we need to add titles?\r\n    if (settings.title) {\r\n      // loop through each child list\r\n      jQuery('li > ul', menu).each((index, element) => {\r\n        // get the label from the parent link\r\n        const label = jQuery(element)\r\n          .parent()\r\n          .find('a')\r\n          .first()\r\n          .text()\r\n\r\n        // if it's not empty, create the title\r\n        if (label) {\r\n          const title = jQuery('<header>')\r\n            .addClass('title')\r\n            .text(label)\r\n\r\n          // append it to the immediate header\r\n          jQuery('> .header', element).append(title)\r\n        }\r\n      })\r\n    }\r\n\r\n    // add click listeners\r\n    this._addListeners()\r\n\r\n    // jump to initial active\r\n    this._jumpToInitial()\r\n  }\r\n\r\n  // click listeners\r\n  _addListeners() {\r\n    const { menu, settings } = this\r\n\r\n    jQuery('a', menu).on('click', e => {\r\n      // prevent broken/half transitions\r\n      if (this._clicked + settings.speed > Date.now()) {\r\n        return false\r\n      }\r\n\r\n      // cache click time to check on next click\r\n      this._clicked = Date.now()\r\n\r\n      // get the link\r\n      const link = jQuery(e.currentTarget)\r\n\r\n      // prevent default if it's a hash\r\n      // or a Slinky button\r\n      if (\r\n        link.attr('href').indexOf('#') === 0 ||\r\n        link.hasClass('next') ||\r\n        link.hasClass('back')\r\n      ) {\r\n        e.preventDefault()\r\n      }\r\n\r\n      // time to move\r\n      if (link.hasClass('next')) {\r\n        // one step forward\r\n\r\n        // remove the current active\r\n        menu.find('.active').removeClass('active')\r\n\r\n        // set the new active\r\n        link\r\n          .next()\r\n          .show()\r\n          .addClass('active')\r\n\r\n        // make the chess move\r\n        this._move(1)\r\n\r\n        // resize the menu if need be\r\n        if (settings.resize) {\r\n          this._resize(link.next())\r\n        }\r\n      } else if (link.hasClass('back')) {\r\n        // and two steps back\r\n        // just one step back, actually\r\n\r\n        // make the move\r\n        this._move(-1, () => {\r\n          // remove the current active\r\n          menu.find('.active').removeClass('active')\r\n\r\n          // set the new active\r\n          link\r\n            .parent()\r\n            .parent()\r\n            .hide()\r\n            .parentsUntil(menu, 'ul')\r\n            .first()\r\n            .addClass('active')\r\n        })\r\n\r\n        // resize the menu if need be\r\n        if (settings.resize) {\r\n          this._resize(\r\n            link\r\n              .parent()\r\n              .parent()\r\n              .parentsUntil(menu, 'ul')\r\n          )\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  // jump to initial active on init\r\n  _jumpToInitial() {\r\n    const { menu, settings } = this\r\n\r\n    // get initial active\r\n    const active = menu.find('.active')\r\n\r\n    if (active.length > 0) {\r\n      // remove initial active\r\n      active.removeClass('active')\r\n\r\n      // jump without animation\r\n      this.jump(active, false)\r\n    }\r\n\r\n    // set initial height on the menu\r\n    // to fix the first transition resize bug\r\n    setTimeout(() => menu.height(menu.outerHeight()), settings.speed)\r\n  }\r\n\r\n  // slide the menu\r\n  _move(depth = 0, callback = () => {}) {\r\n    // don't bother packing if we're not going anywhere\r\n    if (depth === 0) {\r\n      return\r\n    }\r\n\r\n    const { settings, base } = this\r\n\r\n    // get current position from the left\r\n    const left = Math.round(parseInt(base.get(0).style.left)) || 0\r\n\r\n    // set the new position from the left\r\n    base.css('left', `${left - depth * 100}%`)\r\n\r\n    // callback after the animation\r\n    if (typeof callback === 'function') {\r\n      setTimeout(callback, settings.speed)\r\n    }\r\n  }\r\n\r\n  // resize the menu\r\n  // to match content height\r\n  _resize(content) {\r\n    const { menu } = this\r\n\r\n    menu.height(content.outerHeight())\r\n  }\r\n\r\n  // set the transition speed\r\n  _transition(speed = 300) {\r\n    const { menu, base } = this\r\n\r\n    menu.css('transition-duration', `${speed}ms`)\r\n    base.css('transition-duration', `${speed}ms`)\r\n  }\r\n\r\n  // jump to an element\r\n  jump(target, animate = true) {\r\n    if (!target) {\r\n      return\r\n    }\r\n\r\n    const { menu, settings } = this\r\n\r\n    const to = jQuery(target)\r\n\r\n    // get all current active\r\n    const active = menu.find('.active')\r\n\r\n    // how many moves must we jump?\r\n    let count = 0\r\n\r\n    // this many\r\n    // until we reach the parent list\r\n    if (active.length > 0) {\r\n      count = active.parentsUntil(menu, 'ul').length\r\n    }\r\n\r\n    // remove current active\r\n    // hide all lists\r\n    menu\r\n      .find('ul')\r\n      .removeClass('active')\r\n      .hide()\r\n\r\n    // get parent list\r\n    const menus = to.parentsUntil(menu, 'ul')\r\n\r\n    // show parent list\r\n    menus.show()\r\n\r\n    //\r\n    to.show().addClass('active')\r\n\r\n    // set transition speed to 0 if no animation\r\n    if (!animate) {\r\n      this._transition(0)\r\n    }\r\n\r\n    // make the checkers move\r\n    this._move(menus.length - count)\r\n\r\n    // resize menu if need be\r\n    if (settings.resize) {\r\n      this._resize(to)\r\n    }\r\n\r\n    // set transition speed to default after transition\r\n    if (!animate) {\r\n      this._transition(settings.speed)\r\n    }\r\n  }\r\n\r\n  // go big or go home\r\n  // just go home\r\n  home(animate = true) {\r\n    const { base, menu, settings } = this\r\n\r\n    // set transition speed to 0 if no animation\r\n    if (!animate) {\r\n      this._transition(0)\r\n    }\r\n\r\n    // get current active\r\n    const active = menu.find('.active')\r\n\r\n    // get all parent lists\r\n    const parents = active.parentsUntil(menu, 'ul')\r\n\r\n    // make the move\r\n    this._move(-parents.length, () => {\r\n      // remove the current active\r\n      active.removeClass('active').hide()\r\n\r\n      // hide all parents except base\r\n      parents.not(base).hide()\r\n    })\r\n\r\n    // resize if need be\r\n    if (settings.resize) {\r\n      this._resize(base)\r\n    }\r\n\r\n    // set transition speed back to default\r\n    if (animate === false) {\r\n      this._transition(settings.speed)\r\n    }\r\n  }\r\n\r\n  // crush, kill, destroy\r\n  destroy() {\r\n    const { base, menu } = this\r\n\r\n    // remove all headers\r\n    jQuery('.header', menu).remove()\r\n\r\n    // remove Slinky links\r\n    // and click listeners\r\n    jQuery('a', menu)\r\n      .removeClass('next')\r\n      .off('click')\r\n\r\n    // remove inline styles\r\n    menu.css({\r\n      height: '',\r\n      'transition-duration': ''\r\n    })\r\n\r\n    base.css({\r\n      left: '',\r\n      'transition-duration': ''\r\n    })\r\n\r\n    // remove Slinky HTML\r\n    jQuery('li > a > span', menu)\r\n      .contents()\r\n      .unwrap()\r\n\r\n    // remove any current active\r\n    menu.find('.active').removeClass('active')\r\n\r\n    // remove any Slinky style classes\r\n    const styles = menu.attr('class').split(' ')\r\n\r\n    styles.forEach(style => {\r\n      if (style.indexOf('slinky') === 0) {\r\n        menu.removeClass(style)\r\n      }\r\n    })\r\n\r\n    // reset fields\r\n    const fields = ['settings', 'menu', 'base']\r\n\r\n    fields.forEach(field => delete this[field])\r\n  }\r\n}\r\n\r\n// jQuery plugin\r\n;($ => {\r\n  $.fn.slinky = function(options) {\r\n    const menu = new Slinky(this, options)\r\n\r\n    return menu\r\n  }\r\n})(jQuery)\r\n"]}