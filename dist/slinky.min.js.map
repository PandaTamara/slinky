{"version":3,"sources":["slinky.js"],"names":["Slinky","element","options","arguments","length","undefined","_classCallCheck","this","settings","_objectSpread","resize","speed","theme","title","menu","jQuery","base","children","first","addClass","_transition","prev","prepend","back","prop","wrapInner","each","index","label","find","text","append","_addListeners","_jumpToInitial","_this","e","_clicked","Date","now","link","currentTarget","preventDefault","indexOf","hasClass","removeClass","next","show","_move","parent","parentsUntil","active","jump","depth","setTimeout","callback","height","outerHeight","content","left","Math","round","parseInt","get","style","css","concat","animate","target","count","to","menus","hide","_resize","parents","not","_this2","styles","attr","fields","forEach","off","transition-duration","contents","split","field","fn","slinky"],"mappings":"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","file":"slinky.min.js","sourcesContent":["/*\r\n * Slinky\r\n * Rather sweetmenus\r\n * @author Ali Zahid <ali.zahid@live.com>\r\n * @license MIT\r\n */\r\n\r\nclass Slinky {\r\n  // default options\r\n  get options() {\r\n    return {\r\n      resize: true,\r\n      speed: 300,\r\n      theme: 'slinky-theme-default',\r\n      title: false\r\n    }\r\n  }\r\n\r\n  constructor(element, options = {}) {\r\n    // save settings\r\n    this.settings = {\r\n      ...this.options,\r\n      ...options\r\n    }\r\n\r\n    // let's go!\r\n    this._init(element)\r\n  }\r\n\r\n  // setup the DOM just for us\r\n  _init(element) {\r\n    // the two elements of water and moisture\r\n    this.menu = jQuery(element)\r\n    this.base = this.menu.children().first()\r\n\r\n    const { base, menu, settings } = this\r\n\r\n    // set theme\r\n    menu.addClass('slinky-menu').addClass(settings.theme)\r\n\r\n    // set transition speed\r\n    this._transition(settings.speed)\r\n\r\n    // add arrows to links with children\r\n    jQuery('a + ul', menu)\r\n      .prev()\r\n      .addClass('next')\r\n\r\n    // wrap link text with <span>\r\n    // mostly for styling\r\n    jQuery('li > a', menu).wrapInner('<span>')\r\n\r\n    // create header item\r\n    const header = jQuery('<li>').addClass('header')\r\n\r\n    // prepend it to the list\r\n    jQuery('li > ul', menu).prepend(header)\r\n\r\n    // create back buttons\r\n    const back = jQuery('<a>')\r\n      .prop('href', '#')\r\n      .addClass('back')\r\n\r\n    // prepend them to the headers\r\n    jQuery('.header', menu).prepend(back)\r\n\r\n    // do we need to add titles?\r\n    if (settings.title) {\r\n      // loop through each child list\r\n      jQuery('li > ul', menu).each((index, element) => {\r\n        // get the label from the parent link\r\n        const label = jQuery(element)\r\n          .parent()\r\n          .find('a')\r\n          .first()\r\n          .text()\r\n\r\n        // if it's not empty, create the title\r\n        if (label) {\r\n          const title = jQuery('<header>')\r\n            .addClass('title')\r\n            .text(label)\r\n\r\n          // append it to the immediate header\r\n          jQuery('> .header', element).append(title)\r\n        }\r\n      })\r\n    }\r\n\r\n    // add click listeners\r\n    this._addListeners()\r\n\r\n    // jump to initial active\r\n    this._jumpToInitial()\r\n  }\r\n\r\n  // click listeners\r\n  _addListeners() {\r\n    const { menu, settings } = this\r\n\r\n    jQuery('a', menu).on('click', e => {\r\n      // prevent broken/half transitions\r\n      if (this._clicked + settings.speed > Date.now()) {\r\n        return false\r\n      }\r\n\r\n      // cache click time to check on next click\r\n      this._clicked = Date.now()\r\n\r\n      // get the link\r\n      const link = jQuery(e.currentTarget)\r\n\r\n      // prevent default if it's a hash\r\n      // or a Slinky button\r\n      if (\r\n        link.attr('href').indexOf('#') === 0 ||\r\n        link.hasClass('next') ||\r\n        link.hasClass('back')\r\n      ) {\r\n        e.preventDefault()\r\n      }\r\n\r\n      // time to move\r\n      if (link.hasClass('next')) {\r\n        // one step forward\r\n\r\n        // remove the current active\r\n        menu.find('.active').removeClass('active')\r\n\r\n        // set the new active\r\n        link\r\n          .next()\r\n          .show()\r\n          .addClass('active')\r\n\r\n        // make the chess move\r\n        this._move(1)\r\n\r\n        // resize the menu if need be\r\n        if (settings.resize) {\r\n          this._resize(link.next())\r\n        }\r\n      } else if (link.hasClass('back')) {\r\n        // and two steps back\r\n        // just one step back, actually\r\n\r\n        // make the move\r\n        this._move(-1, () => {\r\n          // remove the current active\r\n          menu.find('.active').removeClass('active')\r\n\r\n          // set the new active\r\n          link\r\n            .parent()\r\n            .parent()\r\n            .hide()\r\n            .parentsUntil(menu, 'ul')\r\n            .first()\r\n            .addClass('active')\r\n        })\r\n\r\n        // resize the menu if need be\r\n        if (settings.resize) {\r\n          this._resize(\r\n            link\r\n              .parent()\r\n              .parent()\r\n              .parentsUntil(menu, 'ul')\r\n          )\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  // jump to initial active on init\r\n  _jumpToInitial() {\r\n    const { menu, settings } = this\r\n\r\n    // get initial active\r\n    const active = menu.find('.active')\r\n\r\n    if (active.length > 0) {\r\n      // remove initial active\r\n      active.removeClass('active')\r\n\r\n      // jump without animation\r\n      this.jump(active, false)\r\n    }\r\n\r\n    // set initial height on the menu\r\n    // to fix the first transition resize bug\r\n    setTimeout(() => menu.height(menu.outerHeight()), settings.speed)\r\n  }\r\n\r\n  // slide the menu\r\n  _move(depth = 0, callback = () => {}) {\r\n    // don't bother packing if we're not going anywhere\r\n    if (depth === 0) {\r\n      return\r\n    }\r\n\r\n    const { settings, base } = this\r\n\r\n    // get current position from the left\r\n    const left = Math.round(parseInt(base.get(0).style.left)) || 0\r\n\r\n    // set the new position from the left\r\n    base.css('left', `${left - depth * 100}%`)\r\n\r\n    // callback after the animation\r\n    if (typeof callback === 'function') {\r\n      setTimeout(callback, settings.speed)\r\n    }\r\n  }\r\n\r\n  // resize the menu\r\n  // to match content height\r\n  _resize(content) {\r\n    const { menu } = this\r\n\r\n    menu.height(content.outerHeight())\r\n  }\r\n\r\n  // set the transition speed\r\n  _transition(speed = 300) {\r\n    const { menu, base } = this\r\n\r\n    menu.css('transition-duration', `${speed}ms`)\r\n    base.css('transition-duration', `${speed}ms`)\r\n  }\r\n\r\n  // jump to an element\r\n  jump(target, animate = true) {\r\n    if (!target) {\r\n      return\r\n    }\r\n\r\n    const { menu, settings } = this\r\n\r\n    const to = jQuery(target)\r\n\r\n    // get all current active\r\n    const active = menu.find('.active')\r\n\r\n    // how many moves must we jump?\r\n    let count = 0\r\n\r\n    // this many\r\n    // until we reach the parent list\r\n    if (active.length > 0) {\r\n      count = active.parentsUntil(menu, 'ul').length\r\n    }\r\n\r\n    // remove current active\r\n    // hide all lists\r\n    menu\r\n      .find('ul')\r\n      .removeClass('active')\r\n      .hide()\r\n\r\n    // get parent list\r\n    const menus = to.parentsUntil(menu, 'ul')\r\n\r\n    // show parent list\r\n    menus.show()\r\n\r\n    //\r\n    to.show().addClass('active')\r\n\r\n    // set transition speed to 0 if no animation\r\n    if (!animate) {\r\n      this._transition(0)\r\n    }\r\n\r\n    // make the checkers move\r\n    this._move(menus.length - count)\r\n\r\n    // resize menu if need be\r\n    if (settings.resize) {\r\n      this._resize(to)\r\n    }\r\n\r\n    // set transition speed to default after transition\r\n    if (!animate) {\r\n      this._transition(settings.speed)\r\n    }\r\n  }\r\n\r\n  // go big or go home\r\n  // just go home\r\n  home(animate = true) {\r\n    const { base, menu, settings } = this\r\n\r\n    // set transition speed to 0 if no animation\r\n    if (!animate) {\r\n      this._transition(0)\r\n    }\r\n\r\n    // get current active\r\n    const active = menu.find('.active')\r\n\r\n    // get all parent lists\r\n    const parents = active.parentsUntil(menu, 'ul')\r\n\r\n    // make the move\r\n    this._move(-parents.length, () => {\r\n      // remove the current active\r\n      active.removeClass('active').hide()\r\n\r\n      // hide all parents except base\r\n      parents.not(base).hide()\r\n    })\r\n\r\n    // resize if need be\r\n    if (settings.resize) {\r\n      this._resize(base)\r\n    }\r\n\r\n    // set transition speed back to default\r\n    if (animate === false) {\r\n      this._transition(settings.speed)\r\n    }\r\n  }\r\n\r\n  // crush, kill, destroy\r\n  destroy() {\r\n    const { base, menu } = this\r\n\r\n    // remove all headers\r\n    jQuery('.header', menu).remove()\r\n\r\n    // remove Slinky links\r\n    // and click listeners\r\n    jQuery('a', menu)\r\n      .removeClass('next')\r\n      .off('click')\r\n\r\n    // remove inline styles\r\n    menu.css({\r\n      height: '',\r\n      'transition-duration': ''\r\n    })\r\n\r\n    base.css({\r\n      left: '',\r\n      'transition-duration': ''\r\n    })\r\n\r\n    // remove Slinky HTML\r\n    jQuery('li > a > span', menu)\r\n      .contents()\r\n      .unwrap()\r\n\r\n    // remove any current active\r\n    menu.find('.active').removeClass('active')\r\n\r\n    // remove any Slinky style classes\r\n    const styles = menu.attr('class').split(' ')\r\n\r\n    styles.forEach(style => {\r\n      if (style.indexOf('slinky') === 0) {\r\n        menu.removeClass(style)\r\n      }\r\n    })\r\n\r\n    // reset fields\r\n    const fields = ['settings', 'menu', 'base']\r\n\r\n    fields.forEach(field => delete this[field])\r\n  }\r\n}\r\n\r\n// jQuery plugin\r\n;($ => {\r\n  $.fn.slinky = function(options) {\r\n    const menu = new Slinky(this, options)\r\n\r\n    return menu\r\n  }\r\n})(jQuery)\r\n"]}