{"version":3,"sources":["slinky.js"],"names":["MAIN_CLASS","HEADER_CLASS","TITLE_CLASS","NEXT_CLASS","BACK_CLASS","Slinky","element","options","arguments","length","undefined","_classCallCheck","this","speed","theme","title","headerClass","nextLabelMarkup","mainClass","backClass","nextClass","menu","jQuery","base","children","first","settings","addClass","_init","each","i","el","prev","replaceWith","replace","text","header","prepend","back","backLabelMarkup","index","label","parent","find","append","_addListeners","_jumpToInitial","_this","_clicked","on","e","Date","now","hasClass","link","currentTarget","resize","removeClass","hide","parentsUntil","_move","_resize","active","next","show","setTimeout","jump","callback","height","outerHeight","depth","Math","parseInt","get","style","left","css","concat","target","content","count","animate","_transition","to","menus","parents","not","fields","remove","off","transition-duration","fn","slinky","contents","unwrap","attr","split","forEach","indexOf","field","_this2"],"mappings":"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","file":"slinky.min.js","sourcesContent":["/*\r\n * Fork Slinky\r\n * Rather sweetmenus\r\n * @author Ali Zahid <ali.zahid@live.com>\r\n * @author fork Panda Tamara <link@mimika-team.ru>\r\n * @license MIT\r\n */\r\n\r\n/**\r\n * Static constants\r\n */\r\nconst\r\n    MAIN_CLASS = 'sm-wrap',\r\n    HEADER_CLASS = 'sm-header',\r\n    TITLE_CLASS = 'sm-title',\r\n    NEXT_CLASS = 'sm-next',\r\n    BACK_CLASS = 'sm-back';\r\n\r\nclass Slinky {\r\n\r\n  // default options\r\n    get options() {\r\n        return {\r\n            resize: true,\r\n            speed: 300,\r\n            theme: 'sm-theme-default',\r\n            title: false,\r\n            backLabelMarkup: '<label><i class=\"sm-back-icon\"></i></label>',\r\n            nextLabelMarkup: '<label>%title%<i class=\"sm-next-icon\"></i></label>',\r\n            mainClass: false,\r\n            headerClass: false,\r\n            backClass: false,\r\n            nextClass: false\r\n        }\r\n  }\r\n\r\n  constructor(element, options = {}) {\r\n    // save settings\r\n    this.settings = {\r\n      ...this.options,\r\n      ...options\r\n    }\r\n\r\n    // let's go!\r\n    this._init(element)\r\n  }\r\n\r\n  // setup the DOM just for us\r\n  _init(element) {\r\n    // the two elements of water and moisture\r\n    this.menu = jQuery(element)\r\n    this.base = this.menu.children().first()\r\n\r\n    const { base, menu, settings } = this\r\n\r\n    // set theme\r\n    menu.addClass(MAIN_CLASS).addClass(settings.mainClass).addClass(settings.theme)\r\n\r\n    // set transition speed\r\n    this._transition(settings.speed)\r\n\r\n      // add arrows to links with children\r\n      jQuery('a + ul', menu).each(function (i, el) {\r\n          jQuery(el)\r\n              .prev()\r\n              .replaceWith(jQuery(settings.nextLabelMarkup.replace('%title%', jQuery(el).prev().text()))\r\n                  .addClass(NEXT_CLASS)\r\n                  .addClass(settings.nextClass)\r\n              )\r\n\r\n      });\r\n\r\n\r\n    // create header item\r\n    const header = jQuery('<li>').addClass(HEADER_CLASS).addClass(settings.headerClass)\r\n\r\n    // prepend it to the list\r\n    jQuery('li > ul', menu).prepend(header)\r\n\r\n    // create back buttons\r\n      const back =\r\n          jQuery(settings.backLabelMarkup)\r\n              .addClass(BACK_CLASS)\r\n              .addClass(settings.backClass)\r\n\r\n    // prepend them to the headers\r\n    jQuery('.' + HEADER_CLASS, menu).prepend(back)\r\n\r\n    // do we need to add titles?\r\n    if (settings.title) {\r\n      // loop through each child list\r\n      jQuery('li > ul', menu).each((index, element) => {\r\n        // get the label from the parent link\r\n        const label = jQuery(element)\r\n          .parent()\r\n          .find('a')\r\n          .first()\r\n          .text()\r\n\r\n        // if it's not empty, create the title\r\n        if (label) {\r\n          const title = jQuery('<header>')\r\n            .addClass(TITLE_CLASS)\r\n            .text(label)\r\n\r\n          // append it to the immediate header\r\n          jQuery('> .' + HEADER_CLASS, element).append(title)\r\n        }\r\n      })\r\n    }\r\n\r\n    // add click listeners\r\n    this._addListeners()\r\n\r\n    // jump to initial active\r\n    this._jumpToInitial()\r\n  }\r\n\r\n  // click listeners\r\n  _addListeners() {\r\n    const { menu, settings } = this\r\n\r\n    jQuery('label', menu).on('click', e => {\r\n      // prevent broken/half transitions\r\n      if (this._clicked + settings.speed > Date.now()) {\r\n        return false\r\n      }\r\n\r\n      // cache click time to check on next click\r\n      this._clicked = Date.now()\r\n\r\n      // get the link\r\n      const link = jQuery(e.currentTarget)\r\n\r\n\r\n      // time to move\r\n      if (link.hasClass(BACK_CLASS)) {\r\n          // and two steps back\r\n          // just one step back, actually\r\n\r\n          // make the move\r\n          this._move(-1, () => {\r\n              // remove the current active\r\n              menu.find('.active').removeClass('active')\r\n\r\n              // set the new active\r\n              link\r\n                  .parent()\r\n                  .parent()\r\n                  .hide()\r\n                  .parentsUntil(menu, 'ul')\r\n                  .first()\r\n                  .addClass('active')\r\n          })\r\n\r\n          // resize the menu if need be\r\n          if (settings.resize) {\r\n              this._resize(\r\n                  link\r\n                      .parent()\r\n                      .parent()\r\n                      .parentsUntil(menu, 'ul')\r\n              )\r\n          }\r\n\r\n      } else {\r\n        // one step forward\r\n\r\n        // remove the current active\r\n        menu.find('.active').removeClass('active')\r\n\r\n        // set the new active\r\n        link\r\n          .next()\r\n          .show()\r\n          .addClass('active')\r\n\r\n        // make the chess move\r\n        this._move(1)\r\n\r\n        // resize the menu if need be\r\n        if (settings.resize) {\r\n          this._resize(link.next())\r\n        }\r\n      }\r\n\r\n    })\r\n  }\r\n\r\n  // jump to initial active on init\r\n  _jumpToInitial() {\r\n    const { menu, settings } = this\r\n\r\n    // get initial active\r\n    const active = menu.find('.active')\r\n\r\n    if (active.length > 0) {\r\n      // remove initial active\r\n      active.removeClass('active')\r\n\r\n      // jump without animation\r\n      this.jump(active, false)\r\n    }\r\n\r\n    // set initial height on the menu\r\n    // to fix the first transition resize bug\r\n    setTimeout(() => menu.height(menu.outerHeight()), settings.speed)\r\n  }\r\n\r\n  // slide the menu\r\n  _move(depth = 0, callback = () => {}) {\r\n    // don't bother packing if we're not going anywhere\r\n    if (depth === 0) {\r\n      return\r\n    }\r\n\r\n    const { settings, base } = this\r\n\r\n    // get current position from the left\r\n    const left = Math.round(parseInt(base.get(0).style.left)) || 0\r\n\r\n    // set the new position from the left\r\n    base.css('left', `${left - depth * 100}%`)\r\n\r\n    // callback after the animation\r\n    if (typeof callback === 'function') {\r\n      setTimeout(callback, settings.speed)\r\n    }\r\n  }\r\n\r\n  // resize the menu\r\n  // to match content height\r\n  _resize(content) {\r\n    const { menu } = this\r\n\r\n    menu.height(content.outerHeight())\r\n  }\r\n\r\n  // set the transition speed\r\n  _transition(speed = 300) {\r\n    const { menu, base } = this\r\n\r\n    menu.css('transition-duration', `${speed}ms`)\r\n    base.css('transition-duration', `${speed}ms`)\r\n  }\r\n\r\n  // jump to an element\r\n  jump(target, animate = true) {\r\n    if (!target) {\r\n      return\r\n    }\r\n\r\n    const { menu, settings } = this\r\n\r\n    const to = jQuery(target)\r\n\r\n    // get all current active\r\n    const active = menu.find('.active')\r\n\r\n    // how many moves must we jump?\r\n    let count = 0\r\n\r\n    // this many\r\n    // until we reach the parent list\r\n    if (active.length > 0) {\r\n      count = active.parentsUntil(menu, 'ul').length\r\n    }\r\n\r\n    // remove current active\r\n    // hide all lists\r\n    menu\r\n      .find('ul')\r\n      .removeClass('active')\r\n      .hide()\r\n\r\n    // get parent list\r\n    const menus = to.parentsUntil(menu, 'ul')\r\n\r\n    // show parent list\r\n    menus.show()\r\n\r\n    //\r\n    to.show().addClass('active')\r\n\r\n    // set transition speed to 0 if no animation\r\n    if (!animate) {\r\n      this._transition(0)\r\n    }\r\n\r\n    // make the checkers move\r\n    this._move(menus.length - count)\r\n\r\n    // resize menu if need be\r\n    if (settings.resize) {\r\n      this._resize(to)\r\n    }\r\n\r\n    // set transition speed to default after transition\r\n    if (!animate) {\r\n      this._transition(settings.speed)\r\n    }\r\n  }\r\n\r\n  // go big or go home\r\n  // just go home\r\n  home(animate = true) {\r\n    const { base, menu, settings } = this\r\n\r\n    // set transition speed to 0 if no animation\r\n    if (!animate) {\r\n      this._transition(0)\r\n    }\r\n\r\n    // get current active\r\n    const active = menu.find('.active')\r\n\r\n    // get all parent lists\r\n    const parents = active.parentsUntil(menu, 'ul')\r\n\r\n    // make the move\r\n    this._move(-parents.length, () => {\r\n      // remove the current active\r\n      active.removeClass('active').hide()\r\n\r\n      // hide all parents except base\r\n      parents.not(base).hide()\r\n    })\r\n\r\n    // resize if need be\r\n    if (settings.resize) {\r\n      this._resize(base)\r\n    }\r\n\r\n    // set transition speed back to default\r\n    if (animate === false) {\r\n      this._transition(settings.speed)\r\n    }\r\n  }\r\n\r\n  // crush, kill, destroy\r\n  destroy() {\r\n    const { base, menu, settings } = this\r\n\r\n    // remove all headers\r\n    jQuery('.' + HEADER_CLASS, menu).remove()\r\n\r\n    // remove Slinky links\r\n    // and click listeners\r\n    jQuery('a', menu)\r\n      .removeClass('next')\r\n      .off('click')\r\n\r\n    // remove inline styles\r\n    menu.css({\r\n      height: '',\r\n      'transition-duration': ''\r\n    })\r\n\r\n    base.css({\r\n      left: '',\r\n      'transition-duration': ''\r\n    })\r\n\r\n    // remove Slinky HTML\r\n    jQuery('li > a > span', menu)\r\n      .contents()\r\n      .unwrap()\r\n\r\n    // remove any current active\r\n    menu.find('.active').removeClass('active')\r\n\r\n    // remove any Slinky style classes\r\n    const styles = menu.attr('class').split(' ')\r\n\r\n    styles.forEach(style => {\r\n      if (style.indexOf('slinky') === 0) {\r\n        menu.removeClass(style)\r\n      }\r\n    })\r\n\r\n    // reset fields\r\n    const fields = ['settings', 'menu', 'base']\r\n\r\n    fields.forEach(field => delete this[field])\r\n  }\r\n}\r\n\r\n// jQuery plugin\r\n;($ => {\r\n  $.fn.slinky = function(options) {\r\n    const menu = new Slinky(this, options)\r\n\r\n    return menu\r\n  }\r\n})(jQuery)\r\n"]}