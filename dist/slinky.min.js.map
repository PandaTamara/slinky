{"version":3,"sources":["slinky.js"],"names":["Slinky","element","options","arguments","length","undefined","_classCallCheck","this","settings","_objectSpread","theme","resize","speed","title","backBtnMarkup","nextBtnMarkup","menu","jQuery","base","children","first","addClass","_transition","prev","replaceWith","replace","text","prepend","header","back","each","index","label","find","append","_addListeners","_jumpToInitial","_this","on","e","_clicked","Date","now","link","currentTarget","hasClass","removeClass","next","show","_move","_resize","parent","hide","parentsUntil","active","jump","callback","setTimeout","round","parseInt","depth","Math","get","style","left","css","concat","content","height","outerHeight","target","animate","count","to","menus","parents","not","_this2","remove","off","fields","forEach","transition-duration","contents","slinky","attr","split","indexOf","field","fn"],"mappings":"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","file":"slinky.min.js","sourcesContent":["/*\r\n * Fork Slinky\r\n * Rather sweetmenus\r\n * @author Ali Zahid <ali.zahid@live.com>\r\n * @author fork Panda Tamara <link@mimika-team.ru>\r\n * @license MIT\r\n */\r\n\r\nclass Slinky {\r\n  // default options\r\n    get options() {\r\n        return {\r\n            resize: true,\r\n            speed: 300,\r\n            theme: 'slinky-theme-default',\r\n            title: false,\r\n            backBtnMarkup: '<a href=\"#\" class=\"back\"><i class=\"back-icon\"></i></a>',\r\n            nextBtnMarkup: '<a href=\"#\" class=\"next\">%title%<i class=\"next-icon\"></i></a>'\r\n        }\r\n  }\r\n\r\n  constructor(element, options = {}) {\r\n    // save settings\r\n    this.settings = {\r\n      ...this.options,\r\n      ...options\r\n    }\r\n\r\n    // let's go!\r\n    this._init(element)\r\n  }\r\n\r\n  // setup the DOM just for us\r\n  _init(element) {\r\n    // the two elements of water and moisture\r\n    this.menu = jQuery(element)\r\n    this.base = this.menu.children().first()\r\n\r\n    const { base, menu, settings } = this\r\n\r\n    // set theme\r\n    menu.addClass('slinky-menu').addClass(settings.theme)\r\n\r\n    // set transition speed\r\n    this._transition(settings.speed)\r\n\r\n      // add arrows to links with children\r\n      jQuery('a + ul', menu)\r\n          .prev().replaceWith(settings.nextBtnMarkup.replace('%title%', jQuery(this).text()));\r\n\r\n    // wrap link text with <span>\r\n    // mostly for styling\r\n    /*jQuery('li > a', menu)\r\n        .wrapInner('<span>')\r\n        .after(settings.nextBtnMarkup)*/\r\n\r\n    // create header item\r\n    const header = jQuery('<li>').addClass('header')\r\n\r\n    // prepend it to the list\r\n    jQuery('li > ul', menu).prepend(header)\r\n\r\n    // create back buttons\r\n      const back = jQuery(settings.backBtnMarkup);\r\n\r\n    // prepend them to the headers\r\n    jQuery('.header', menu).prepend(back)\r\n\r\n    // do we need to add titles?\r\n    if (settings.title) {\r\n      // loop through each child list\r\n      jQuery('li > ul', menu).each((index, element) => {\r\n        // get the label from the parent link\r\n        const label = jQuery(element)\r\n          .parent()\r\n          .find('a')\r\n          .first()\r\n          .text()\r\n\r\n        // if it's not empty, create the title\r\n        if (label) {\r\n          const title = jQuery('<header>')\r\n            .addClass('title')\r\n            .text(label)\r\n\r\n          // append it to the immediate header\r\n          jQuery('> .header', element).append(title)\r\n        }\r\n      })\r\n    }\r\n\r\n    // add click listeners\r\n    this._addListeners()\r\n\r\n    // jump to initial active\r\n    this._jumpToInitial()\r\n  }\r\n\r\n  // click listeners\r\n  _addListeners() {\r\n    const { menu, settings } = this\r\n\r\n    jQuery('a', menu).on('click', e => {\r\n      // prevent broken/half transitions\r\n      if (this._clicked + settings.speed > Date.now()) {\r\n        return false\r\n      }\r\n\r\n      // cache click time to check on next click\r\n      this._clicked = Date.now()\r\n\r\n      // get the link\r\n      const link = jQuery(e.currentTarget)\r\n\r\n      // prevent default if it's a hash\r\n      // or a Slinky button\r\n      if (\r\n        link.attr('href').indexOf('#') === 0 ||\r\n        link.hasClass('next') ||\r\n        link.hasClass('back')\r\n      ) {\r\n        e.preventDefault()\r\n      }\r\n\r\n      // time to move\r\n      if (link.hasClass('next')) {\r\n        // one step forward\r\n\r\n        // remove the current active\r\n        menu.find('.active').removeClass('active')\r\n\r\n        // set the new active\r\n        link\r\n          .next()\r\n          .show()\r\n          .addClass('active')\r\n\r\n        // make the chess move\r\n        this._move(1)\r\n\r\n        // resize the menu if need be\r\n        if (settings.resize) {\r\n          this._resize(link.next())\r\n        }\r\n      } else if (link.hasClass('back')) {\r\n        // and two steps back\r\n        // just one step back, actually\r\n\r\n        // make the move\r\n        this._move(-1, () => {\r\n          // remove the current active\r\n          menu.find('.active').removeClass('active')\r\n\r\n          // set the new active\r\n          link\r\n            .parent()\r\n            .parent()\r\n            .hide()\r\n            .parentsUntil(menu, 'ul')\r\n            .first()\r\n            .addClass('active')\r\n        })\r\n\r\n        // resize the menu if need be\r\n        if (settings.resize) {\r\n          this._resize(\r\n            link\r\n              .parent()\r\n              .parent()\r\n              .parentsUntil(menu, 'ul')\r\n          )\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  // jump to initial active on init\r\n  _jumpToInitial() {\r\n    const { menu, settings } = this\r\n\r\n    // get initial active\r\n    const active = menu.find('.active')\r\n\r\n    if (active.length > 0) {\r\n      // remove initial active\r\n      active.removeClass('active')\r\n\r\n      // jump without animation\r\n      this.jump(active, false)\r\n    }\r\n\r\n    // set initial height on the menu\r\n    // to fix the first transition resize bug\r\n    setTimeout(() => menu.height(menu.outerHeight()), settings.speed)\r\n  }\r\n\r\n  // slide the menu\r\n  _move(depth = 0, callback = () => {}) {\r\n    // don't bother packing if we're not going anywhere\r\n    if (depth === 0) {\r\n      return\r\n    }\r\n\r\n    const { settings, base } = this\r\n\r\n    // get current position from the left\r\n    const left = Math.round(parseInt(base.get(0).style.left)) || 0\r\n\r\n    // set the new position from the left\r\n    base.css('left', `${left - depth * 100}%`)\r\n\r\n    // callback after the animation\r\n    if (typeof callback === 'function') {\r\n      setTimeout(callback, settings.speed)\r\n    }\r\n  }\r\n\r\n  // resize the menu\r\n  // to match content height\r\n  _resize(content) {\r\n    const { menu } = this\r\n\r\n    menu.height(content.outerHeight())\r\n  }\r\n\r\n  // set the transition speed\r\n  _transition(speed = 300) {\r\n    const { menu, base } = this\r\n\r\n    menu.css('transition-duration', `${speed}ms`)\r\n    base.css('transition-duration', `${speed}ms`)\r\n  }\r\n\r\n  // jump to an element\r\n  jump(target, animate = true) {\r\n    if (!target) {\r\n      return\r\n    }\r\n\r\n    const { menu, settings } = this\r\n\r\n    const to = jQuery(target)\r\n\r\n    // get all current active\r\n    const active = menu.find('.active')\r\n\r\n    // how many moves must we jump?\r\n    let count = 0\r\n\r\n    // this many\r\n    // until we reach the parent list\r\n    if (active.length > 0) {\r\n      count = active.parentsUntil(menu, 'ul').length\r\n    }\r\n\r\n    // remove current active\r\n    // hide all lists\r\n    menu\r\n      .find('ul')\r\n      .removeClass('active')\r\n      .hide()\r\n\r\n    // get parent list\r\n    const menus = to.parentsUntil(menu, 'ul')\r\n\r\n    // show parent list\r\n    menus.show()\r\n\r\n    //\r\n    to.show().addClass('active')\r\n\r\n    // set transition speed to 0 if no animation\r\n    if (!animate) {\r\n      this._transition(0)\r\n    }\r\n\r\n    // make the checkers move\r\n    this._move(menus.length - count)\r\n\r\n    // resize menu if need be\r\n    if (settings.resize) {\r\n      this._resize(to)\r\n    }\r\n\r\n    // set transition speed to default after transition\r\n    if (!animate) {\r\n      this._transition(settings.speed)\r\n    }\r\n  }\r\n\r\n  // go big or go home\r\n  // just go home\r\n  home(animate = true) {\r\n    const { base, menu, settings } = this\r\n\r\n    // set transition speed to 0 if no animation\r\n    if (!animate) {\r\n      this._transition(0)\r\n    }\r\n\r\n    // get current active\r\n    const active = menu.find('.active')\r\n\r\n    // get all parent lists\r\n    const parents = active.parentsUntil(menu, 'ul')\r\n\r\n    // make the move\r\n    this._move(-parents.length, () => {\r\n      // remove the current active\r\n      active.removeClass('active').hide()\r\n\r\n      // hide all parents except base\r\n      parents.not(base).hide()\r\n    })\r\n\r\n    // resize if need be\r\n    if (settings.resize) {\r\n      this._resize(base)\r\n    }\r\n\r\n    // set transition speed back to default\r\n    if (animate === false) {\r\n      this._transition(settings.speed)\r\n    }\r\n  }\r\n\r\n  // crush, kill, destroy\r\n  destroy() {\r\n    const { base, menu } = this\r\n\r\n    // remove all headers\r\n    jQuery('.header', menu).remove()\r\n\r\n    // remove Slinky links\r\n    // and click listeners\r\n    jQuery('a', menu)\r\n      .removeClass('next')\r\n      .off('click')\r\n\r\n    // remove inline styles\r\n    menu.css({\r\n      height: '',\r\n      'transition-duration': ''\r\n    })\r\n\r\n    base.css({\r\n      left: '',\r\n      'transition-duration': ''\r\n    })\r\n\r\n    // remove Slinky HTML\r\n    jQuery('li > a > span', menu)\r\n      .contents()\r\n      .unwrap()\r\n\r\n    // remove any current active\r\n    menu.find('.active').removeClass('active')\r\n\r\n    // remove any Slinky style classes\r\n    const styles = menu.attr('class').split(' ')\r\n\r\n    styles.forEach(style => {\r\n      if (style.indexOf('slinky') === 0) {\r\n        menu.removeClass(style)\r\n      }\r\n    })\r\n\r\n    // reset fields\r\n    const fields = ['settings', 'menu', 'base']\r\n\r\n    fields.forEach(field => delete this[field])\r\n  }\r\n}\r\n\r\n// jQuery plugin\r\n;($ => {\r\n  $.fn.slinky = function(options) {\r\n    const menu = new Slinky(this, options)\r\n\r\n    return menu\r\n  }\r\n})(jQuery)\r\n"]}