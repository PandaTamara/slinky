{"version":3,"sources":["slinky.js"],"names":["MAIN_CLASS","HEADER_CLASS","TITLE_CLASS","NEXT_CLASS","BACK_CLASS","Slinky","speed","element","options","arguments","length","undefined","_classCallCheck","this","title","settings","backLabelMarkup","nextLabelMarkup","backClass","titleLabelMarkup","mainClass","headerClass","titleClass","nextClass","menu","jQuery","base","children","first","addClass","theme","_init","header","console","log","each","index","parent","_transition","label","attr","text","append","back","replaceWith","_addListeners","prepend","_jumpToInitial","i","el","prev","replace","_this","link","currentTarget","hasClass","e","_clicked","Date","now","_resize","find","_move","removeClass","show","resize","hide","parentsUntil","height","next","parseInt","active","setTimeout","callback","jump","outerHeight","depth","left","Math","target","get","style","concat","count","css","menus","animate","to","parents","not","styles","_this2","remove","off","transition-duration","contents","unwrap","split","forEach","indexOf","field","fn","slinky"],"mappings":"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","file":"slinky.min.js","sourcesContent":["/*\r\n * Fork Slinky\r\n * Rather sweetmenus\r\n * @author Ali Zahid <ali.zahid@live.com>\r\n * @author fork Panda Tamara <link@mimika-team.ru>\r\n * @license MIT\r\n */\r\n\r\n/**\r\n * Static constants\r\n */\r\nconst\r\n    MAIN_CLASS = 'sm-wrap',\r\n    HEADER_CLASS = 'sm-header',\r\n    TITLE_CLASS = 'sm-title',\r\n    NEXT_CLASS = 'sm-next',\r\n    BACK_CLASS = 'sm-back';\r\n\r\nclass Slinky {\r\n\r\n    // default options\r\n    get options() {\r\n        return {\r\n            resize: true,\r\n            speed: 300,\r\n            theme: false,\r\n            title: true,\r\n            backLabelMarkup: '<label><i class=\"sm-back-icon\"></i></label>',\r\n            nextLabelMarkup: '<label>%title%<i class=\"sm-next-icon\"></i></label>',\r\n            titleLabelMarkup: '<label />',\r\n            mainClass: false,\r\n            headerClass: false,\r\n            backClass: false,\r\n            titleClass: false,\r\n            nextClass: false\r\n        }\r\n    }\r\n\r\n    constructor(element, options = {}) {\r\n        // save settings\r\n        this.settings = {\r\n            ...this.options,\r\n            ...options\r\n        }\r\n\r\n        // let's go!\r\n        this._init(element)\r\n    }\r\n\r\n    // setup the DOM just for us\r\n    _init(element) {\r\n        // the two elements of water and moisture\r\n        this.menu = jQuery(element)\r\n        this.base = this.menu.children().first()\r\n\r\n        const {base, menu, settings} = this\r\n\r\n        // set theme\r\n        menu.addClass(MAIN_CLASS).addClass(settings.mainClass).addClass(settings.theme)\r\n\r\n        // set transition speed\r\n        this._transition(settings.speed)\r\n\r\n        // create header item\r\n        const header = jQuery('<li>').addClass(HEADER_CLASS).addClass(settings.headerClass)\r\n\r\n        // prepend it to the list\r\n        jQuery('li > ul', menu).prepend(header)\r\n\r\n        // do we need to add titles?\r\n        console.log(settings.title);\r\n        if (settings.title) {\r\n            // loop through each child list\r\n            jQuery('li > ul', menu).each((index, element) => {\r\n                // get the label from the parent link\r\n                const label = jQuery(element)\r\n                    .parent()\r\n                    .find('a')\r\n                    .first()\r\n\r\n                console.log(label.text());\r\n                console.log('--');\r\n\r\n                // if it's not empty, create the title\r\n                if (label) {\r\n                    /*const title = jQuery('<header>')\r\n                      .addClass(TITLE_CLASS)\r\n                      .text(label)*/\r\n\r\n                    const title = jQuery(label.attr('href') === '#' ? jQuery('<label>') : jQuery('<a>').attr('href', label.attr('href')))\r\n                        .addClass(TITLE_CLASS)\r\n                        .addClass(settings.titleClass)\r\n                        .text(label.text())\r\n\r\n                    //console.log(title);\r\n\r\n                    // append it to the immediate header\r\n                    // TODO use header var\r\n                    jQuery('> .' + HEADER_CLASS, element).append(title)\r\n\r\n                    //jQuery(header, element).append(title)\r\n\r\n                }\r\n            })\r\n\r\n            console.log('-------');\r\n        }\r\n\r\n\r\n\r\n        // create back buttons\r\n        const back =\r\n            jQuery(settings.backLabelMarkup)\r\n                .addClass(BACK_CLASS)\r\n                .addClass(settings.backClass)\r\n\r\n        // prepend them to the headers\r\n        jQuery('.' + HEADER_CLASS, menu).prepend(back)\r\n\r\n        // add arrows to links with children\r\n        jQuery('a + ul', menu).each(function (i, el) {\r\n            jQuery(el)\r\n                .prev()\r\n                .replaceWith(jQuery(settings.nextLabelMarkup.replace('%title%', jQuery(el).prev().text()))\r\n                    .addClass(NEXT_CLASS)\r\n                    .addClass(settings.nextClass)\r\n                )\r\n\r\n        });\r\n\r\n        // add click listeners\r\n        this._addListeners()\r\n\r\n        // jump to initial active\r\n        this._jumpToInitial()\r\n    }\r\n\r\n    // click listeners\r\n    _addListeners() {\r\n        const {menu, settings} = this\r\n\r\n        jQuery('label', menu).on('click', e => {\r\n            // prevent broken/half transitions\r\n            if (this._clicked + settings.speed > Date.now()) {\r\n                return false\r\n            }\r\n\r\n            // cache click time to check on next click\r\n            this._clicked = Date.now()\r\n\r\n            // get the link\r\n            const link = jQuery(e.currentTarget)\r\n\r\n            // time to move\r\n            if (link.hasClass(BACK_CLASS)) {\r\n                // and two steps back\r\n                // just one step back, actually\r\n\r\n                // make the move\r\n                this._move(-1, () => {\r\n                    // remove the current active\r\n                    menu.find('.active').removeClass('active')\r\n\r\n                    // set the new active\r\n                    link\r\n                        .parent()\r\n                        .parent()\r\n                        .hide()\r\n                        .parentsUntil(menu, 'ul')\r\n                        .first()\r\n                        .addClass('active')\r\n                })\r\n\r\n                // resize the menu if need be\r\n                if (settings.resize) {\r\n                    this._resize(\r\n                        link\r\n                            .parent()\r\n                            .parent()\r\n                            .parentsUntil(menu, 'ul')\r\n                    )\r\n                }\r\n\r\n            } else if (link.hasClass(NEXT_CLASS)) {\r\n                // one step forward\r\n\r\n                // remove the current active\r\n                menu.find('.active').removeClass('active')\r\n\r\n                // set the new active\r\n                link\r\n                    .next()\r\n                    .show()\r\n                    .addClass('active')\r\n\r\n                // make the chess move\r\n                this._move(1)\r\n\r\n                // resize the menu if need be\r\n                if (settings.resize) {\r\n                    this._resize(link.next())\r\n                }\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    // jump to initial active on init\r\n    _jumpToInitial() {\r\n        const {menu, settings} = this\r\n\r\n        // get initial active\r\n        const active = menu.find('.active')\r\n\r\n        if (active.length > 0) {\r\n            // remove initial active\r\n            active.removeClass('active')\r\n\r\n            // jump without animation\r\n            this.jump(active, false)\r\n        }\r\n\r\n        // set initial height on the menu\r\n        // to fix the first transition resize bug\r\n        setTimeout(() => menu.height(menu.outerHeight()), settings.speed)\r\n    }\r\n\r\n    // slide the menu\r\n    _move(depth = 0, callback = () => {\r\n    }) {\r\n        // don't bother packing if we're not going anywhere\r\n        if (depth === 0) {\r\n            return\r\n        }\r\n\r\n        const {settings, base} = this\r\n\r\n        // get current position from the left\r\n        const left = Math.round(parseInt(base.get(0).style.left)) || 0\r\n\r\n        // set the new position from the left\r\n        base.css('left', `${left - depth * 100}%`)\r\n\r\n        // callback after the animation\r\n        if (typeof callback === 'function') {\r\n            setTimeout(callback, settings.speed)\r\n        }\r\n    }\r\n\r\n    // resize the menu\r\n    // to match content height\r\n    _resize(content) {\r\n        const {menu} = this\r\n\r\n        menu.height(content.outerHeight())\r\n    }\r\n\r\n    // set the transition speed\r\n    _transition(speed = 300) {\r\n        const {menu, base} = this\r\n\r\n        menu.css('transition-duration', `${speed}ms`)\r\n        base.css('transition-duration', `${speed}ms`)\r\n    }\r\n\r\n    // jump to an element\r\n    jump(target, animate = true) {\r\n        if (!target) {\r\n            return\r\n        }\r\n\r\n        const {menu, settings} = this\r\n\r\n        const to = jQuery(target)\r\n\r\n        // get all current active\r\n        const active = menu.find('.active')\r\n\r\n        // how many moves must we jump?\r\n        let count = 0\r\n\r\n        // this many\r\n        // until we reach the parent list\r\n        if (active.length > 0) {\r\n            count = active.parentsUntil(menu, 'ul').length\r\n        }\r\n\r\n        // remove current active\r\n        // hide all lists\r\n        menu\r\n            .find('ul')\r\n            .removeClass('active')\r\n            .hide()\r\n\r\n        // get parent list\r\n        const menus = to.parentsUntil(menu, 'ul')\r\n\r\n        // show parent list\r\n        menus.show()\r\n\r\n        //\r\n        to.show().addClass('active')\r\n\r\n        // set transition speed to 0 if no animation\r\n        if (!animate) {\r\n            this._transition(0)\r\n        }\r\n\r\n        // make the checkers move\r\n        this._move(menus.length - count)\r\n\r\n        // resize menu if need be\r\n        if (settings.resize) {\r\n            this._resize(to)\r\n        }\r\n\r\n        // set transition speed to default after transition\r\n        if (!animate) {\r\n            this._transition(settings.speed)\r\n        }\r\n    }\r\n\r\n    // go big or go home\r\n    // just go home\r\n    home(animate = true) {\r\n        const {base, menu, settings} = this\r\n\r\n        // set transition speed to 0 if no animation\r\n        if (!animate) {\r\n            this._transition(0)\r\n        }\r\n\r\n        // get current active\r\n        const active = menu.find('.active')\r\n\r\n        // get all parent lists\r\n        const parents = active.parentsUntil(menu, 'ul')\r\n\r\n        // make the move\r\n        this._move(-parents.length, () => {\r\n            // remove the current active\r\n            active.removeClass('active').hide()\r\n\r\n            // hide all parents except base\r\n            parents.not(base).hide()\r\n        })\r\n\r\n        // resize if need be\r\n        if (settings.resize) {\r\n            this._resize(base)\r\n        }\r\n\r\n        // set transition speed back to default\r\n        if (animate === false) {\r\n            this._transition(settings.speed)\r\n        }\r\n    }\r\n\r\n    // crush, kill, destroy\r\n    destroy() {\r\n        const {base, menu, settings} = this\r\n\r\n        // remove all headers\r\n        jQuery('.' + HEADER_CLASS, menu).remove()\r\n\r\n        // remove Slinky links\r\n        // and click listeners\r\n        jQuery('a', menu)\r\n            .removeClass('next')\r\n            .off('click')\r\n\r\n        // remove inline styles\r\n        menu.css({\r\n            height: '',\r\n            'transition-duration': ''\r\n        })\r\n\r\n        base.css({\r\n            left: '',\r\n            'transition-duration': ''\r\n        })\r\n\r\n        // remove Slinky HTML\r\n        jQuery('li > a > span', menu)\r\n            .contents()\r\n            .unwrap()\r\n\r\n        // remove any current active\r\n        menu.find('.active').removeClass('active')\r\n\r\n        // remove any Slinky style classes\r\n        const styles = menu.attr('class').split(' ')\r\n\r\n        styles.forEach(style => {\r\n            if (style.indexOf('slinky') === 0) {\r\n                menu.removeClass(style)\r\n            }\r\n        })\r\n\r\n        // reset fields\r\n        const fields = ['settings', 'menu', 'base']\r\n\r\n        fields.forEach(field => delete this[field])\r\n    }\r\n}\r\n\r\n// jQuery plugin\r\n;($ => {\r\n    $.fn.slinky = function (options) {\r\n        const menu = new Slinky(this, options)\r\n\r\n        return menu\r\n    }\r\n})(jQuery)\r\n"]}