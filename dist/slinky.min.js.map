{"version":3,"sources":["slinky.js"],"names":["MAIN_CLASS","HEADER_CLASS","TITLE_CLASS","BACK_CLASS","Slinky","element","options","arguments","length","undefined","_classCallCheck","this","resize","speed","theme","mainClass","nextLabelMarkup","headerClass","backClass","menu","jQuery","base","children","first","settings","addClass","_init","each","i","el","prev","replaceWith","replace","text","prepend","header","back","title","parent","label","append","_addListeners","_jumpToInitial","_this","on","e","_clicked","Date","now","link","hasClass","_move","find","removeClass","hide","parentsUntil","_resize","next","active","setTimeout","height","jump","outerHeight","depth","callback","left","Math","round","parseInt","get","style","css","concat","content","count","target","animate","to","show","_transition","menus","parents","not","styles","forEach","remove","fields","off","transition-duration","unwrap","attr","split","indexOf","field","_this2","fn","slinky"],"mappings":"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","file":"slinky.min.js","sourcesContent":["/*\r\n * Fork Slinky\r\n * Rather sweetmenus\r\n * @author Ali Zahid <ali.zahid@live.com>\r\n * @author fork Panda Tamara <link@mimika-team.ru>\r\n * @license MIT\r\n */\r\n\r\n/**\r\n * Static constants\r\n */\r\nconst\r\n    MAIN_CLASS = 'sm-wrap',\r\n    HEADER_CLASS = 'sm-header',\r\n    TITLE_CLASS = 'sm-title',\r\n    BACK_CLASS = 'sm-back';\r\n\r\nclass Slinky {\r\n\r\n  // default options\r\n    get options() {\r\n        return {\r\n            resize: true,\r\n            speed: 300,\r\n            theme: 'sm-theme-default',\r\n            title: false,\r\n            backLabelMarkup: '<label><i class=\"sm-back-icon\"></i></label>',\r\n            nextLabelMarkup: '<label><span>%title%</span><i class=\"sm-next-icon\"></i></label>',\r\n            mainClass: false,\r\n            headerClass: false,\r\n            backClass: false\r\n        }\r\n  }\r\n\r\n  constructor(element, options = {}) {\r\n    // save settings\r\n    this.settings = {\r\n      ...this.options,\r\n      ...options\r\n    }\r\n\r\n    // let's go!\r\n    this._init(element)\r\n  }\r\n\r\n  // setup the DOM just for us\r\n  _init(element) {\r\n    // the two elements of water and moisture\r\n    this.menu = jQuery(element)\r\n    this.base = this.menu.children().first()\r\n\r\n    const { base, menu, settings } = this\r\n\r\n    // set theme\r\n    menu.addClass(MAIN_CLASS).addClass(settings.mainClass).addClass(settings.theme)\r\n\r\n    // set transition speed\r\n    this._transition(settings.speed)\r\n\r\n      // add arrows to links with children\r\n      jQuery('a + ul', menu).each(function (i, el) {\r\n          jQuery(el)\r\n              .prev()\r\n              .replaceWith(settings.nextLabelMarkup.replace('%title%', jQuery(el).prev().text()))\r\n\r\n      });\r\n\r\n\r\n    // create header item\r\n    const header = jQuery('<li>').addClass(HEADER_CLASS).addClass(settings.headerClass)\r\n\r\n    // prepend it to the list\r\n    jQuery('li > ul', menu).prepend(header)\r\n\r\n    // create back buttons\r\n      const back =\r\n          jQuery(settings.backLabelMarkup)\r\n              .addClass(BACK_CLASS)\r\n              .addClass(settings.backClass)\r\n\r\n    // prepend them to the headers\r\n    jQuery('.' + HEADER_CLASS, menu).prepend(back)\r\n\r\n    // do we need to add titles?\r\n    if (settings.title) {\r\n      // loop through each child list\r\n      jQuery('li > ul', menu).each((index, element) => {\r\n        // get the label from the parent link\r\n        const label = jQuery(element)\r\n          .parent()\r\n          .find('a')\r\n          .first()\r\n          .text()\r\n\r\n        // if it's not empty, create the title\r\n        if (label) {\r\n          const title = jQuery('<header>')\r\n            .addClass(TITLE_CLASS)\r\n            .text(label)\r\n\r\n          // append it to the immediate header\r\n          jQuery('> .' + HEADER_CLASS, element).append(title)\r\n        }\r\n      })\r\n    }\r\n\r\n    // add click listeners\r\n    this._addListeners()\r\n\r\n    // jump to initial active\r\n    this._jumpToInitial()\r\n  }\r\n\r\n  // click listeners\r\n  _addListeners() {\r\n    const { menu, settings } = this\r\n\r\n    jQuery('label', menu).on('click', e => {\r\n      // prevent broken/half transitions\r\n      if (this._clicked + settings.speed > Date.now()) {\r\n        return false\r\n      }\r\n\r\n      // cache click time to check on next click\r\n      this._clicked = Date.now()\r\n\r\n      // get the link\r\n      const link = jQuery(e.currentTarget)\r\n\r\n\r\n      // time to move\r\n      if (link.hasClass(BACK_CLASS)) {\r\n          // and two steps back\r\n          // just one step back, actually\r\n\r\n          // make the move\r\n          this._move(-1, () => {\r\n              // remove the current active\r\n              menu.find('.active').removeClass('active')\r\n\r\n              // set the new active\r\n              link\r\n                  .parent()\r\n                  .parent()\r\n                  .hide()\r\n                  .parentsUntil(menu, 'ul')\r\n                  .first()\r\n                  .addClass('active')\r\n          })\r\n\r\n          // resize the menu if need be\r\n          if (settings.resize) {\r\n              this._resize(\r\n                  link\r\n                      .parent()\r\n                      .parent()\r\n                      .parentsUntil(menu, 'ul')\r\n              )\r\n          }\r\n\r\n      } else {\r\n        // one step forward\r\n\r\n        // remove the current active\r\n        menu.find('.active').removeClass('active')\r\n\r\n        // set the new active\r\n        link\r\n          .next()\r\n          .show()\r\n          .addClass('active')\r\n\r\n        // make the chess move\r\n        this._move(1)\r\n\r\n        // resize the menu if need be\r\n        if (settings.resize) {\r\n          this._resize(link.next())\r\n        }\r\n      }\r\n\r\n    })\r\n  }\r\n\r\n  // jump to initial active on init\r\n  _jumpToInitial() {\r\n    const { menu, settings } = this\r\n\r\n    // get initial active\r\n    const active = menu.find('.active')\r\n\r\n    if (active.length > 0) {\r\n      // remove initial active\r\n      active.removeClass('active')\r\n\r\n      // jump without animation\r\n      this.jump(active, false)\r\n    }\r\n\r\n    // set initial height on the menu\r\n    // to fix the first transition resize bug\r\n    setTimeout(() => menu.height(menu.outerHeight()), settings.speed)\r\n  }\r\n\r\n  // slide the menu\r\n  _move(depth = 0, callback = () => {}) {\r\n    // don't bother packing if we're not going anywhere\r\n    if (depth === 0) {\r\n      return\r\n    }\r\n\r\n    const { settings, base } = this\r\n\r\n    // get current position from the left\r\n    const left = Math.round(parseInt(base.get(0).style.left)) || 0\r\n\r\n    // set the new position from the left\r\n    base.css('left', `${left - depth * 100}%`)\r\n\r\n    // callback after the animation\r\n    if (typeof callback === 'function') {\r\n      setTimeout(callback, settings.speed)\r\n    }\r\n  }\r\n\r\n  // resize the menu\r\n  // to match content height\r\n  _resize(content) {\r\n    const { menu } = this\r\n\r\n    menu.height(content.outerHeight())\r\n  }\r\n\r\n  // set the transition speed\r\n  _transition(speed = 300) {\r\n    const { menu, base } = this\r\n\r\n    menu.css('transition-duration', `${speed}ms`)\r\n    base.css('transition-duration', `${speed}ms`)\r\n  }\r\n\r\n  // jump to an element\r\n  jump(target, animate = true) {\r\n    if (!target) {\r\n      return\r\n    }\r\n\r\n    const { menu, settings } = this\r\n\r\n    const to = jQuery(target)\r\n\r\n    // get all current active\r\n    const active = menu.find('.active')\r\n\r\n    // how many moves must we jump?\r\n    let count = 0\r\n\r\n    // this many\r\n    // until we reach the parent list\r\n    if (active.length > 0) {\r\n      count = active.parentsUntil(menu, 'ul').length\r\n    }\r\n\r\n    // remove current active\r\n    // hide all lists\r\n    menu\r\n      .find('ul')\r\n      .removeClass('active')\r\n      .hide()\r\n\r\n    // get parent list\r\n    const menus = to.parentsUntil(menu, 'ul')\r\n\r\n    // show parent list\r\n    menus.show()\r\n\r\n    //\r\n    to.show().addClass('active')\r\n\r\n    // set transition speed to 0 if no animation\r\n    if (!animate) {\r\n      this._transition(0)\r\n    }\r\n\r\n    // make the checkers move\r\n    this._move(menus.length - count)\r\n\r\n    // resize menu if need be\r\n    if (settings.resize) {\r\n      this._resize(to)\r\n    }\r\n\r\n    // set transition speed to default after transition\r\n    if (!animate) {\r\n      this._transition(settings.speed)\r\n    }\r\n  }\r\n\r\n  // go big or go home\r\n  // just go home\r\n  home(animate = true) {\r\n    const { base, menu, settings } = this\r\n\r\n    // set transition speed to 0 if no animation\r\n    if (!animate) {\r\n      this._transition(0)\r\n    }\r\n\r\n    // get current active\r\n    const active = menu.find('.active')\r\n\r\n    // get all parent lists\r\n    const parents = active.parentsUntil(menu, 'ul')\r\n\r\n    // make the move\r\n    this._move(-parents.length, () => {\r\n      // remove the current active\r\n      active.removeClass('active').hide()\r\n\r\n      // hide all parents except base\r\n      parents.not(base).hide()\r\n    })\r\n\r\n    // resize if need be\r\n    if (settings.resize) {\r\n      this._resize(base)\r\n    }\r\n\r\n    // set transition speed back to default\r\n    if (animate === false) {\r\n      this._transition(settings.speed)\r\n    }\r\n  }\r\n\r\n  // crush, kill, destroy\r\n  destroy() {\r\n    const { base, menu, settings } = this\r\n\r\n    // remove all headers\r\n    jQuery('.' + HEADER_CLASS, menu).remove()\r\n\r\n    // remove Slinky links\r\n    // and click listeners\r\n    jQuery('a', menu)\r\n      .removeClass('next')\r\n      .off('click')\r\n\r\n    // remove inline styles\r\n    menu.css({\r\n      height: '',\r\n      'transition-duration': ''\r\n    })\r\n\r\n    base.css({\r\n      left: '',\r\n      'transition-duration': ''\r\n    })\r\n\r\n    // remove Slinky HTML\r\n    jQuery('li > a > span', menu)\r\n      .contents()\r\n      .unwrap()\r\n\r\n    // remove any current active\r\n    menu.find('.active').removeClass('active')\r\n\r\n    // remove any Slinky style classes\r\n    const styles = menu.attr('class').split(' ')\r\n\r\n    styles.forEach(style => {\r\n      if (style.indexOf('slinky') === 0) {\r\n        menu.removeClass(style)\r\n      }\r\n    })\r\n\r\n    // reset fields\r\n    const fields = ['settings', 'menu', 'base']\r\n\r\n    fields.forEach(field => delete this[field])\r\n  }\r\n}\r\n\r\n// jQuery plugin\r\n;($ => {\r\n  $.fn.slinky = function(options) {\r\n    const menu = new Slinky(this, options)\r\n\r\n    return menu\r\n  }\r\n})(jQuery)\r\n"]}